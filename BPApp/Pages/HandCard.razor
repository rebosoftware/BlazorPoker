@page "/handcard"

@using BPData
@using BPData.Lists;
@using BPData.Models;
@using BPData.Services;

<!--services-->
@inject DeckService DeckSvc
@inject EvalService EvalService
@inject GameService GameSvc

@if (card.Discard)
{
    <table cellpadding="0" cellspacing="0">
        <tr>
            <td>
                @if (GameSvc.State != BPData.BPConstants.GS_Draw)
                {
                    if (player.Name != me.Name)
                    {
                        <img id="@card.DeckID" height="@DiscardHeight" width="@DiscardWidth" src="cards/card_discard.png" alt="Discard">
                    }
                    else
                    {
                        <!--Try it with a lambda. I was binding the onclick to the result of the function rather than the function itself.-->
                        <img id="@card.DeckID" @onclick="@(e => discard())" height="@DiscardHeight" width="@DiscardWidth" src="cards/card_discard.png" alt="Discard">
                    }
                }
                else
                {
                    <img @onclick="@(e => discard())" height="@CardHeight" width="@CardWidth" src="cards/card_gameover.png" alt="Discard">
                }
            </td>
        </tr>
      </table>
}
else
{
    //can only see my cards, unless forced by alwaysshow property
    if (player.Name != me.Name)
    {
        <table cellpadding="0" cellspacing="0" >
            <tr>
                @if (GameSvc.State != BPData.BPConstants.GS_Draw)
                {
                    <td>
                    <img height="@CardHeight" width="@CardWidth" src="cards/card_back.png" alt="back of playing card">
                    </td>
                }
                else
                {
                    <td>
                    <img height="@CardHeight" width="@CardWidth" src="cards/@card.ImageName" alt="@card.FullName">
                    </td>
                }
            </tr>
        </table>
    }
    else
    {
        <table cellpadding="0" cellspacing="0" >
            <tr>
                <td>
                    <!--Try it with a lambda. I was binding the onclick to the result of the function rather than the function itself.-->
                    <img @onclick="@(e => discard())" height="@CardHeight" width="@CardWidth" src="cards/@card.ImageName" alt="@card.FullName">
                </td>
            </tr>
        </table>

    }
}

@code {
    [Parameter]
    public Card card { get; set; }

    [Parameter]
    public Player player { get; set; }

    [Parameter]
    public Player me { get; set; }

    [Parameter]
    public bool alwaysshow { get; set; }

    [Parameter]
    public string CardHeight { get; set; }

    [Parameter]
    public string CardWidth { get; set; }

    [Parameter]
    public string DiscardHeight { get; set; }

    [Parameter]
    public string DiscardWidth { get; set; }
           

    protected override void OnInitialized()
    {
    
    }

    //set the discard state, used later to actually dicard the card
    private void discard()
    {
        //set the state of the local card
        card.Discard = !card.Discard;
    }
}